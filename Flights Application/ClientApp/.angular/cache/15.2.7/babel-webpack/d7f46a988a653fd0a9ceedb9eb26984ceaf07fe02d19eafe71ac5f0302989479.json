{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (!this.authService.currentUser?.email) {\n      this.router.navigate(['/register-passenger', {\n        requestedUrl: state.url\n      }]);\n    }\n    return true;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,WAAwB,EAAUC,MAAa;IAA/C,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAE5D;EACAC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,IAAI,CAAC,IAAI,CAACJ,WAAW,CAACK,WAAW,EAAEC,KAAK,EAAE;MAExC,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,qBAAqB,EAAE;QAACC,YAAY,EAACJ,KAAK,CAACK;MAAG,CAAC,CAAC,CAAC;;IAIzE,OAAO,IAAI;EACb;;AAfWX,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAY,SAATZ,SAAS;EAAAa,YAFR;AAAM","names":["AuthGuard","constructor","authService","router","canActivate","route","state","currentUser","email","navigate","requestedUrl","url","factory","providedIn"],"sourceRoot":"","sources":["C:\\AngularProjects\\Flights Application\\Flights Application\\ClientApp\\src\\app\\auth\\auth-guard.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree,Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router:Router) {\r\n\r\n  }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (!this.authService.currentUser?.email) {\r\n\r\n      this.router.navigate(['/register-passenger', {requestedUrl:state.url}]);\r\n    }\r\n\r\n\r\n    return true;\r\n  }\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}