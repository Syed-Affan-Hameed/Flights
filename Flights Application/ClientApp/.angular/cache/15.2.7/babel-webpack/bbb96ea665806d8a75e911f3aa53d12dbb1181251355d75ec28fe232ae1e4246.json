{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api/services\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../auth/auth.service\";\nimport * as i4 from \"@angular/router\";\nexport class RegisterPassengerComponent {\n  constructor(passengerService, formbuilder, authService, router) {\n    this.passengerService = passengerService;\n    this.formbuilder = formbuilder;\n    this.authService = authService;\n    this.router = router;\n    this.PassengerRegistrationForm = this.formbuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(254)])],\n      firstName: ['', Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(254)])],\n      lastName: ['', Validators.compose([Validators.required, Validators.min(1), Validators.max(254)])],\n      isFemale: [true, Validators.required]\n    });\n    this.logIn = () => {\n      this.authService.login({\n        email: this.PassengerRegistrationForm.get('email')?.value\n      });\n      this.router.navigate(['/search-flights']);\n    };\n  }\n  ngOnInit() {\n    // throw new Error('Method not implemented.');\n  }\n  checkPassenger() {\n    const emailObjectForCheckingifUserExists = {\n      email: this.PassengerRegistrationForm.get('email')?.value?.toString()\n    };\n    this.passengerService.findPassenger(emailObjectForCheckingifUserExists).subscribe(p => {\n      console.log(\"passenger Exists logging in and redirecting to searchflights\");\n      this.logIn();\n    }, error => {\n      if (error.status != 404) {\n        console.log(error);\n      }\n    });\n    this.passengerService.findPassenger(emailObjectForCheckingifUserExists);\n  }\n  register() {\n    console.log(\"Form values for registration\", this.PassengerRegistrationForm.value);\n    // this is a post method so have to populate the body.\n    // let serviceObjectEmailOnly: User = { email: this.PassengerRegistrationForm.get('email')?.value }\n    this.passengerService.registerPassenger({\n      body: this.PassengerRegistrationForm.value\n    }).subscribe(p => this.logIn(), error => console.log(error));\n  }\n}\nRegisterPassengerComponent.ɵfac = function RegisterPassengerComponent_Factory(t) {\n  return new (t || RegisterPassengerComponent)(i0.ɵɵdirectiveInject(i1.PassengerService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.Router));\n};\nRegisterPassengerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterPassengerComponent,\n  selectors: [[\"app-register-passenger\"]],\n  decls: 27,\n  vars: 3,\n  consts: [[3, \"formGroup\"], [1, \"container\", \"d-grid\", \"gap-3\", 2, \"max-width\", \"700px\"], [1, \"form-floating\"], [\"formControlName\", \"email\", \"placeholder\", \"Email\", \"type\", \"text\", 1, \"form-control\", 3, \"blur\"], [\"for\", \"email\"], [1, \"d-grid\", \"gap-3\"], [\"formControlName\", \"firstName\", \"type\", \"text\", \"id\", \"firstName\", \"placeholder\", \"First Name\", 1, \"form-control\"], [\"for\", \"firstName\", 1, \"form-label\"], [\"formControlName\", \"lastName\", \"placeholder\", \"Last Name\", \"id\", \"lastName\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"lastName\", 1, \"form-label\"], [\"formControlName\", \"isFemale\", \"id\", \"isFemale\", \"type\", \"radio\", 1, \"form-check-input\", 3, \"value\"], [\"for\", \"isFemale\", 1, \"ms-2\", \"form-check-label\"], [1, \"d-flex\", \"justify-content-center\", \"center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-sign-in\"]],\n  template: function RegisterPassengerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"input\", 3);\n      i0.ɵɵlistener(\"blur\", function RegisterPassengerComponent_Template_input_blur_3_listener() {\n        return ctx.checkPassenger();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 4);\n      i0.ɵɵtext(5, \"Email\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 2);\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵelementStart(9, \"label\", 7);\n      i0.ɵɵtext(10, \"First Name\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 2);\n      i0.ɵɵelement(12, \"input\", 8);\n      i0.ɵɵelementStart(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Last Name\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\");\n      i0.ɵɵelement(16, \"input\", 10);\n      i0.ɵɵelementStart(17, \"label\", 11);\n      i0.ɵɵtext(18, \"Female\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\");\n      i0.ɵɵelement(20, \"input\", 10);\n      i0.ɵɵelementStart(21, \"label\", 11);\n      i0.ɵɵtext(22, \"Male\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(23, \"div\", 12)(24, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function RegisterPassengerComponent_Template_button_click_24_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵtext(25, \"Login \");\n      i0.ɵɵelement(26, \"i\", 14);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.PassengerRegistrationForm);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"value\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", false);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAsBA,UAAU,QAAQ,gBAAgB;;;;;;AAWxD,OAAM,MAAOC,0BAA0B;EAErCC,YAAoBC,gBAAkC,EAAUC,WAAwB,EAAUC,WAAwB,EAAUC,MAAa;IAA7H,qBAAgB,GAAhBH,gBAAgB;IAA4B,gBAAW,GAAXC,WAAW;IAAuB,gBAAW,GAAXC,WAAW;IAAuB,WAAM,GAANC,MAAM;IAE1I,8BAAyB,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACjDC,KAAK,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,OAAO,CAAC,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,EAAEX,UAAU,CAACY,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1GC,SAAS,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACS,OAAO,CAAC,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,EAAEX,UAAU,CAACY,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC9GE,QAAQ,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACS,OAAO,CAAC,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACe,GAAG,CAAC,CAAC,CAAC,EAAEf,UAAU,CAACgB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACjGC,QAAQ,EAAE,CAAC,IAAI,EAAEjB,UAAU,CAACU,QAAQ;KACrC,CAAC;IA8BM,UAAK,GAAG,MAAK;MACnB,IAAI,CAACL,WAAW,CAACa,KAAK,CAAC;QAAEV,KAAK,EAAE,IAAI,CAACW,yBAAyB,CAACC,GAAG,CAAC,OAAO,CAAC,EAAEC;MAAK,CAAE,CAAC;MACrF,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;IAC3C,CAAC;EAxCoJ;EASrJC,QAAQ;IACP;EAAA;EAEDC,cAAc;IAEZ,MAAMC,kCAAkC,GAA0B;MAAEjB,KAAK,EAAE,IAAI,CAACW,yBAAyB,CAACC,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK,EAAEK,QAAQ;IAAE,CAAE;IAC3I,IAAI,CAACvB,gBAAgB,CAACwB,aAAa,CAACF,kCAAkC,CAAC,CAACG,SAAS,CAACC,CAAC,IAAG;MACpFC,OAAO,CAACC,GAAG,CAAC,8DAA8D,CAAC;MAC3E,IAAI,CAACC,KAAK,EAAE;IACd,CAAC,EAAEC,KAAK,IAAG;MACT,IAAIA,KAAK,CAACC,MAAM,IAAI,GAAG,EAAE;QACvBJ,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;;IAGtB,CAAC,CAAC;IACF,IAAI,CAAC9B,gBAAgB,CAACwB,aAAa,CAAEF,kCAAkC,CAAC;EAC1E;EAGAU,QAAQ;IACNL,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAACZ,yBAAyB,CAACE,KAAK,CAAC;IACjF;IACD;IACC,IAAI,CAAClB,gBAAgB,CAACiC,iBAAiB,CAAC;MAAEC,IAAI,EAAE,IAAI,CAAClB,yBAAyB,CAACE;IAAK,CAAE,CAAC,CAACO,SAAS,CAACC,CAAC,IACnG,IAAI,CAACG,KAAK,EAAE,EAAEC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAAC;EAE5C;;AArCWhC,0BAA0B;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B;QAA1BA,0BAA0B;EAAAqC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCbvCC,+BAA8C;MAMjCA;QAAA,OAAQC,oBAAgB;MAAA,EAAC;MAAhCD,iBAAgH;MAChHA,gCAAmB;MAAAA,qBAAK;MAAAA,iBAAQ;MAGlCA,8BAA0B;MAItBA,2BAA8G;MAC9GA,gCAA0C;MAAAA,2BAAU;MAAAA,iBAAQ;MAI9DA,+BAA2B;MAEzBA,4BAA2G;MAC3GA,iCAAyC;MAAAA,0BAAS;MAAAA,iBAAQ;MAK5DA,4BAAK;MAEHA,6BAAqG;MACrGA,kCAAoD;MAAAA,uBAAM;MAAAA,iBAAQ;MAEpEA,4BAAK;MACHA,6BAAsG;MACtGA,kCAAoD;MAAAA,qBAAI;MAAAA,iBAAQ;MAGpEA,gCAAkD;MACxCA;QAAA,OAASC,cAAU;MAAA,EAAC;MAAuCD,uBAAM;MAAAA,yBAAgD;MAAAA,iBAAS;;;MAtClIA,yDAAuC;MA6BoCA,gBAAY;MAAZA,4BAAY;MAIZA,eAAa;MAAbA,6BAAa","names":["Validators","RegisterPassengerComponent","constructor","passengerService","formbuilder","authService","router","group","email","compose","required","minLength","maxLength","firstName","lastName","min","max","isFemale","login","PassengerRegistrationForm","get","value","navigate","ngOnInit","checkPassenger","emailObjectForCheckingifUserExists","toString","findPassenger","subscribe","p","console","log","logIn","error","status","register","registerPassenger","body","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\AngularProjects\\Flights Application\\Flights Application\\ClientApp\\src\\app\\register-passenger\\register-passenger.component.ts","C:\\AngularProjects\\Flights Application\\Flights Application\\ClientApp\\src\\app\\register-passenger\\register-passenger.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { PassengerService } from '../api/services';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService, User } from '../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { FindFlight$Params } from '../api/fn/flight/find-flight';\r\nimport { FindPassenger$Params } from '../api/fn/passenger/find-passenger';\r\n\n@Component({\n  selector: 'app-register-passenger',\n  templateUrl: './register-passenger.component.html',\n  styleUrls: ['./register-passenger.component.css']\n})\nexport class RegisterPassengerComponent implements OnInit {\r\n\r\n  constructor(private passengerService: PassengerService, private formbuilder: FormBuilder, private authService: AuthService, private router:Router) { }\r\n\r\n  PassengerRegistrationForm = this.formbuilder.group({\r\n    email: ['', Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(254)])],\r\n    firstName: ['', Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(254)])],\r\n    lastName: ['', Validators.compose([Validators.required, Validators.min(1), Validators.max(254)])],\r\n    isFemale: [true, Validators.required]\r\n  })\r\n\r\n  ngOnInit(): void {\r\n   // throw new Error('Method not implemented.');\r\n  }\n  checkPassenger(): void {\n\r\n    const emailObjectForCheckingifUserExists: FindPassenger$Params  = { email: this.PassengerRegistrationForm.get('email')?.value?.toString() };\r\n    this.passengerService.findPassenger(emailObjectForCheckingifUserExists).subscribe(p => {\r\n      console.log(\"passenger Exists logging in and redirecting to searchflights\");\r\n      this.logIn();\r\n    }, error => {\r\n      if (error.status != 404) {\r\n        console.log(error)\r\n      }\r\n       \r\n    })\r\n    this.passengerService.findPassenger( emailObjectForCheckingifUserExists)\r\n  }\n\n\n  register() {\n    console.log(\"Form values for registration\", this.PassengerRegistrationForm.value);\r\n    // this is a post method so have to populate the body.\r\n   // let serviceObjectEmailOnly: User = { email: this.PassengerRegistrationForm.get('email')?.value }\r\n    this.passengerService.registerPassenger({ body: this.PassengerRegistrationForm.value }).subscribe(p =>\r\n    this.logIn(), error => console.log(error))\r\n\r\n  }\n\n  private logIn = () => {\n    this.authService.login({ email: this.PassengerRegistrationForm.get('email')?.value });\r\n    this.router.navigate(['/search-flights']);\r\n  }\n\n}\n","<form [formGroup]=\"PassengerRegistrationForm\">\n\n\n  <div class=\"container d-grid gap-3\" style=\"max-width: 700px;\">\n\n    <div class=\"form-floating\">\n      <input (blur)=\"checkPassenger()\" formControlName=\"email\" placeholder=\"Email\" class=\"form-control\" type=\"text\" />\n      <label for=\"email\">Email</label>\n\n    </div>\n    <div class=\"d-grid gap-3\">\n\n      <div class=\"form-floating\">\n\n        <input formControlName=\"firstName\" class=\"form-control\" type=\"text\" id=\"firstName\" placeholder=\"First Name\" />\n        <label class=\"form-label\" for=\"firstName\">First Name</label>\n\n      </div>\n\n      <div class=\"form-floating\">\n\n        <input formControlName=\"lastName\" placeholder=\"Last Name\" class=\"form-control\" id=\"lastName\" type=\"text\" />\n        <label class=\"form-label\" for=\"lastName\">Last Name</label>\n\n      </div>\n\n\n      <div>\n\n        <input formControlName=\"isFemale\" id=\"isFemale\" class=\"form-check-input\" [value]=true type=\"radio\" />\n        <label class=\"ms-2 form-check-label\" for=\"isFemale\">Female</label>\n      </div>\n      <div>\n        <input formControlName=\"isFemale\" id=\"isFemale\" class=\"form-check-input\" [value]=false type=\"radio\" />\n        <label class=\"ms-2 form-check-label\" for=\"isFemale\">Male</label>\n      </div>\n    </div>\n    <div class=\"d-flex justify-content-center center\">\n      <button (click)=\"register()\" type=\"submit\" class=\"btn btn-primary\">Login <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i></button>\n    </div>\n  </div>\n\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}